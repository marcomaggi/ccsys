# @configure_input@
#

AC_PREREQ([2.69])
MMUX_PKG_VERSIONS([0],[1],[0],[devel.0])
AC_INIT([CCSys],[MMUX_PACKAGE_VERSION],
  [marco.maggi-ipsu@poste.it],
  [ccsys],[http://github.com/marcomaggi/ccsys/])
MMUX_INIT
MMUX_LIBTOOL_LIBRARY_VERSIONS([ccsys],1,0,0)
AC_REVISION([0.1])
AC_COPYRIGHT([Copyright (c) 2017, 2018 Marco Maggi <marco.maggi-ipsu@poste.it>

This program is free software: you  can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as published by
the Free  Software Foundation, either version  3 of the License,  or (at
your option) any later version.

This program  is distributed  in the  hope that it  will be  useful, but
WITHOUT   ANY   WARRANTY;  without   even   the   implied  warranty   of
MERCHANTABILITY  or  FITNESS FOR  A  PARTICULAR  PURPOSE.  See  the  GNU
General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
])
AC_CONFIG_SRCDIR([src/])
AC_CONFIG_MACRO_DIR([meta/autotools])
AC_CONFIG_AUX_DIR([meta/autotools])

# Define these before any use of the C compiler!
AC_DEFINE([_POSIX_C_SOURCE],[200809L],[Request enabling latest POSIX features.])
AC_USE_SYSTEM_EXTENSIONS

AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE([foreign subdir-objects])
AM_MAINTAINER_MODE

AM_PROG_AR
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_MKDIR_P

LT_PREREQ([2.4])
LT_INIT


#### basic system inspection

MMUX_CHECK_TARGET_OS

AC_LANG([C])
MMUX_LANG_C11

AM_PROG_AS
AM_PROG_CC_C_O
AC_HEADER_STDC
AC_HEADER_STDBOOL
AC_CHECK_HEADERS([assert.h errno.h stdint.h stddef.h setjmp.h memory.h limits.h fcntl.h dirent.h time.h])
AC_CHECK_HEADERS([grp.h])
AC_CHECK_HEADERS([sys/syscall.h sys/select.h sys/stat.h sys/time.h sys/types.h sys/uio.h sys/mman.h sys/wait.h sys/ioctl.h])
AC_CHECK_HEADERS([netdb.h netinet/in.h arpa/inet.h sys/socket.h sys/un.h])
AC_CHECK_HEADERS([signal.h pwd.h grp.h])
AC_CHECK_HEADERS([sys/auxv.h sys/resource.h])
AC_CHECK_HEADERS([linux/fs.h])

dnl The  documentation of GNU  Autoconf states that AC_PROG_CC  sets the
dnl variable "GCC" to "yes" if the selected compiler is GCC.
AM_CONDITIONAL([WANT_GCC],[test "x$GCC" = xyes])

AC_CACHE_SAVE


#### external libraries

MMUX_CHECK_PKG_CONFIG_MACROS
PKG_CHECK_MODULES([CCEXCEPTIONS],[ccexceptions >= 0.8.0])
PKG_CHECK_MODULES([CCMEMORY],[ccmemory >= 0.2.1])
PKG_CHECK_MODULES([CCSTRUCTS],[ccstructs >= 0.1.0])
PKG_CHECK_MODULES([CCTESTS],[cctests >= 0.3.0],,[AC_MSG_WARN([package CCTests not found])])

AM_CONDITIONAL([MMUX_TESTING_ENABLED],[test -n "$CCTESTS_LIBS"])

AC_CACHE_SAVE


#### checks for library functions

AC_FUNC_MALLOC

AC_CHECK_FUNCS([getenv setenv unsetenv putenv clearenv])
AC_CHECK_FUNCS([exit _exit atexit abort])
AC_CHECK_FUNCS([mlock munlock mlockall munlockall])
AC_CHECK_FUNCS([mmap munmap msync mprotect])
AC_CHECK_FUNCS([getuid getgid geteuid getegid setuid seteuid setreuid setgid setegid setregid])
AC_CHECK_FUNCS([getgroups setgroups initgroups getgrouplist getlogin_r])
AC_CHECK_FUNCS([getpwuid getpwuid_r getpwnam getpwnam_r setpwent getpwent endpwent])
AC_CHECK_FUNCS([getgrgid getgrgid_r getgrnam getgrnam_r setgrent getgrent endgrent])
AC_CHECK_FUNCS([open openat close read pread write pwrite lseek])
AC_CHECK_FUNCS([readv writev preadv pwritev preadv2 pwritev2])
AC_CHECK_FUNCS([pipe pipe2 mkfifo mkfifoat])
AC_CHECK_FUNCS([dup dup2 dup3])
AC_CHECK_FUNCS([select pselect])
AC_CHECK_FUNCS([sync syncfs fsync fdatasync])
AC_CHECK_FUNCS([getcwd chdir fchdir get_current_dir_name])
AC_CHECK_FUNCS([opendir fdopendir readdir closedir dirfd])
AC_CHECK_FUNCS([stat fstat fstatat lstat])
AC_CHECK_FUNCS([mkdir mkdirat rmdir])
AC_CHECK_FUNCS([link linkat symlink symlinkat readlink readlinkat realpath unlink unlinkat remove])
AC_CHECK_FUNCS([rename renameat renameat2])
AC_CHECK_FUNCS([chown fchown lchown fchownat])
AC_CHECK_FUNCS([chmod fchmod fchmodat access faccessat])
AC_CHECK_FUNCS([utimes utimensat futimens])
AC_CHECK_FUNCS([truncate ftruncate])
AC_CHECK_FUNCS([mkstemp])
AC_CHECK_FUNCS([bind getsockname inet_network socket shutdown socketpair connect listen accept getpeername])
AC_CHECK_FUNCS([send recv sendto recvfrom getsockopt setsockopt])
AC_CHECK_FUNCS([system fork execv execve execvp waitpid])
AC_CHECK_FUNCS([isatty])
AC_CHECK_FUNCS([raise kill])
AC_CHECK_FUNCS([sleep nanosleep usleep])
AC_CHECK_FUNCS([getrusage getrlimit setrlimit])
AC_CHECK_FUNCS([sysconf pathconf fpathconf confstr])
AC_CHECK_FUNCS([fcntl ioctl])

dnl GNU C library stuff

AC_CHECK_FUNCS([secure_getenv getauxval])
AC_CHECK_FUNCS([mremap madvise inet_aton])
AC_CHECK_FUNCS([mkdtemp mkstemps mkostemp mkostemps])
dnl AC_CHECK_FUNCS([gethostbyname_r gethostbyname2_r gethostbyaddr_r])

dnl Linux stuff
AC_CHECK_FUNCS([lutimes futimes futimesat])

AC_CACHE_SAVE


#### inspection of data types_t

CCSYS_UINT_TYPE_ALIAS([SIZE_T],[size_t],[CCSYS_STDDEF_HEADER])
CCSYS_INT_TYPE_ALIAS([SSIZE_T],[ssize_t],[CCSYS_UNISTD_HEADER])
CCSYS_INT_TYPE_ALIAS([PTRDIFF_T],[ptrdiff_t],[CCSYS_STDDEF_HEADER])

CCSYS_INT_TYPE_ALIAS([MODE_T],[mode_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([OFF_T],[off_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([INO_T],[ino_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([DEV_T],[dev_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([NLINK_T],[nlink_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([BLKSIZE_T],[blksize_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([BLKCNT_T],[blkcnt_t],[CCSYS_SYS_TYPES_HEADER])

CCSYS_INT_TYPE_ALIAS([PID_T],[pid_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([UID_T],[uid_t],[CCSYS_SYS_TYPES_HEADER])
CCSYS_INT_TYPE_ALIAS([GID_T],[gid_t],[CCSYS_SYS_TYPES_HEADER])

CCSYS_INT_TYPE_ALIAS([RLIM_T],[rlim_t],[CCSYS_SYS_RESOURCE_HEADER])

CCSYS_INT_TYPE_ALIAS([SOCKLEN_T],[socklen_t],[CCSYS_UNISTD_HEADER])

AC_CACHE_SAVE


#### inspection of data structures

CCSYS_SIZEOF([STRUCT_DIRENT],[struct dirent],[CCSYS_DIRENT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_DIRENT_D_NAME],[struct dirent],[d_name],[CCSYS_DIRENT_HEADER])

CCSYS_SIZEOF([STRUCT_IOVEC],[struct iovec],[CCSYS_SYS_UIO_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_IOVEC_IOV_BASE],[struct iovec],[iov_base],[CCSYS_SYS_UIO_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_IOVEC_IOV_LEN], [struct iovec],[iov_len], [CCSYS_SYS_UIO_HEADER])

# Inspection of: "struct stat".
#
CCSYS_SIZEOF([STRUCT_STAT],[struct stat],[CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_DEV],    [struct stat],[st_dev],     [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_INO],    [struct stat],[st_ino],     [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_MODE],   [struct stat],[st_mode],    [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_NLINK],  [struct stat],[st_nlink],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_UID],    [struct stat],[st_uid],     [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_GID],    [struct stat],[st_gid],     [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_RDEV],   [struct stat],[st_rdev],    [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_SIZE],   [struct stat],[st_size],    [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_BLKSIZE],[struct stat],[st_blksize], [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_BLOCKS], [struct stat],[st_blocks],  [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_ATIME],  [struct stat],[st_atime],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_MTIME],  [struct stat],[st_mtime],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_CTIME],  [struct stat],[st_ctime],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_ATIME_USEC],  [struct stat],[st_atime_usec],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_MTIME_USEC],  [struct stat],[st_mtime_usec],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_CTIME_USEC],  [struct stat],[st_ctime_usec],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_ATIM],   [struct stat],[st_atim],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_MTIM],   [struct stat],[st_mtim],   [CCSYS_SYS_STAT_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_STAT_ST_CTIM],   [struct stat],[st_ctim],   [CCSYS_SYS_STAT_HEADER])

CCSYS_SIZEOF([SIGSET_T],[sigset_t],[CCSYS_SYS_SELECT_HEADER])

CCSYS_SIZEOF([FPOS_T],[fpos_t],[CCSYS_STDIO_HEADER])

# Inspection of: "struct passwd".
#
CCSYS_SIZEOF([STRUCT_PASSWD],[struct passwd],[CCSYS_PWD_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_PASSWD_PW_NAME],   [struct passwd],[pw_name],   [CCSYS_PWD_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_PASSWD_PW_PASSWD], [struct passwd],[pw_passwd], [CCSYS_PWD_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_PASSWD_PW_UID],    [struct passwd],[pw_uid],    [CCSYS_PWD_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_PASSWD_PW_GID],    [struct passwd],[pw_gid],    [CCSYS_PWD_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_PASSWD_PW_GECOS],  [struct passwd],[pw_gecos],  [CCSYS_PWD_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_PASSWD_PW_DIR],    [struct passwd],[pw_dir],    [CCSYS_PWD_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_PASSWD_PW_SHELL],  [struct passwd],[pw_shell],  [CCSYS_PWD_HEADER])

# Inspection of: "struct group".
#
CCSYS_SIZEOF([STRUCT_GROUP],[struct group],[CCSYS_GRP_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_GROUP_GR_NAME],   [struct group],[gr_name],   [CCSYS_GRP_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_GROUP_GR_GID],    [struct group],[gr_gid],    [CCSYS_GRP_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_GROUP_GR_MEM],    [struct group],[gr_mem],    [CCSYS_GRP_HEADER])

# Inspection of: "struct rusage".
#
CCSYS_SIZEOF([STRUCT_RUSAGE],[struct rusage],[CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_UTIME],   [struct rusage],[ru_utime],   [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_STIME],    [struct rusage],[ru_stime],     [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_MAXRSS],   [struct rusage],[ru_maxrss],    [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_IXRSS],    [struct rusage],[ru_ixrss],     [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_IDRSS],    [struct rusage],[ru_idrss],     [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_ISRSS],    [struct rusage],[ru_isrss],     [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_MINFLT],   [struct rusage],[ru_minflt],    [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_MAJFLT],   [struct rusage],[ru_majflt],    [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_NSWAP],    [struct rusage],[ru_nswap],     [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_INBLOCK],  [struct rusage],[ru_inblock],   [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_OUBLOCK],  [struct rusage],[ru_oublock],   [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_MSGSND],   [struct rusage],[ru_msgsnd],    [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_MSGRCV],   [struct rusage],[ru_msgrcv],    [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_NSIGNALS], [struct rusage],[ru_nsignals],  [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_NVCSW],    [struct rusage],[ru_nvcsw],     [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RUSAGE_RU_NIVCSW],   [struct rusage],[ru_nivcsw],    [CCSYS_SYS_RESOURCE_HEADER])

# Inspection of: "struct rlimit".
#
CCSYS_SIZEOF([STRUCT_RLIMIT],[struct rlimit],[CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RLIMIT_RLIM_CUR],   [struct rlimit],[rlim_cur],   [CCSYS_SYS_RESOURCE_HEADER])
CCSYS_STRUCT_FIELD([STRUCT_RLIMIT_RLIM_MAX],   [struct rlimit],[rlim_max],   [CCSYS_SYS_RESOURCE_HEADER])

CCSYS_SIZEOF([STRUCT_HOSTENT],[struct hostent],[CCSYS_NETDB_HEADER])

CCSYS_SIZEOF([STRUCT_IN_ADDR],[struct in_addr],[CCSYS_NETINET_IN_HEADER])
CCSYS_SIZEOF([STRUCT_SOCKADDR],[struct sockaddr],[CCSYS_NETINET_IN_HEADER])
CCSYS_SIZEOF([STRUCT_SOCKADDR_IN],[struct sockaddr_in],[CCSYS_NETINET_IN_HEADER])
CCSYS_SIZEOF([STRUCT_SOCKADDR_IN6],[struct sockaddr_in6],[CCSYS_NETINET_IN_HEADER])
CCSYS_SIZEOF([STRUCT_SOCKADDR_UN],[struct sockaddr_un],[CCSYS_SYS_UN_HEADER])

CCSYS_SIZEOF([STRUCT_TIMEVAL],[struct timeval],[CCSYS_TIME_HEADER])
CCSYS_SIZEOF([STRUCT_TIMESPEC],[struct timespec],[CCSYS_TIME_HEADER])

CCSYS_SIZEOF([STRUCT_FD_SET],[fd_set],[CCSYS_SYS_TYPES_HEADER])

AC_CACHE_SAVE


#### system constants: errno values

# Errno values.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_E2BIG],[E2BIG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EACCES],[EACCES],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EADDRINUSE],[EADDRINUSE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EADDRNOTAVAIL],[EADDRNOTAVAIL],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EADV],[EADV],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EAFNOSUPPORT],[EAFNOSUPPORT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EAGAIN],[EAGAIN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EALREADY],[EALREADY],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EAUTH],[EAUTH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBACKGROUND],[EBACKGROUND],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADE],[EBADE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADFD],[EBADFD],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADF],[EBADF],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADMSG],[EBADMSG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADRPC],[EBADRPC],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADRQC],[EBADRQC],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADR],[EBADR],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBADSLT],[EBADSLT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBFONT],[EBFONT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EBUSY],[EBUSY],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ECANCELED],[ECANCELED],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ECHILD],[ECHILD],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ECHRNG],[ECHRNG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ECOMM],[ECOMM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ECONNABORTED],[ECONNABORTED],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ECONNREFUSED],[ECONNREFUSED],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ECONNRESET],[ECONNRESET],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EDEADLK],[EDEADLK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EDEADLOCK],[EDEADLOCK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EDESTADDRREQ],[EDESTADDRREQ],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EDIED],[EDIED],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EDOM],[EDOM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EDOTDOT],[EDOTDOT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EDQUOT],[EDQUOT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EEXIST],[EEXIST],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EFAULT],[EFAULT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EFBIG],[EFBIG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EFTYPE],[EFTYPE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EHOSTDOWN],[EHOSTDOWN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EHOSTUNREACH],[EHOSTUNREACH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EHWPOISON],[EHWPOISON],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EIDRM],[EIDRM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EILSEQ],[EILSEQ],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EINPROGRESS],[EINPROGRESS],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EINTR],[EINTR],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EINVAL],[EINVAL],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EIO],[EIO],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EISCONN],[EISCONN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EISDIR],[EISDIR],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EISNAM],[EISNAM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EKEYEXPIRED],[EKEYEXPIRED],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EKEYREJECTED],[EKEYREJECTED],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EKEYREVOKED],[EKEYREVOKED],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EL2HLT],[EL2HLT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EL2NSYNC],[EL2NSYNC],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EL3HLT],[EL3HLT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EL3RST],[EL3RST],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ELIBACC],[ELIBACC],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ELIBBAD],[ELIBBAD],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ELIBEXEC],[ELIBEXEC],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ELIBMAX],[ELIBMAX],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ELIBSCN],[ELIBSCN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ELNRNG],[ELNRNG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ELOOP],[ELOOP],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EMEDIUMTYPE],[EMEDIUMTYPE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EMFILE],[EMFILE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EMLINK],[EMLINK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EMSGSIZE],[EMSGSIZE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EMULTIHOP],[EMULTIHOP],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENAMETOOLONG],[ENAMETOOLONG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENAVAIL],[ENAVAIL],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENEEDAUTH],[ENEEDAUTH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENETDOWN],[ENETDOWN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENETRESET],[ENETRESET],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENETUNREACH],[ENETUNREACH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENFILE],[ENFILE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOANO],[ENOANO],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOBUFS],[ENOBUFS],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOCSI],[ENOCSI],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENODATA],[ENODATA],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENODEV],[ENODEV],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOENT],[ENOENT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOEXEC],[ENOEXEC],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOKEY],[ENOKEY],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOLCK],[ENOLCK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOLINK],[ENOLINK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOMEDIUM],[ENOMEDIUM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOMEM],[ENOMEM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOMSG],[ENOMSG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENONET],[ENONET],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOPKG],[ENOPKG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOPROTOOPT],[ENOPROTOOPT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOSPC],[ENOSPC],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOSR],[ENOSR],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOSTR],[ENOSTR],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOSYS],[ENOSYS],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTBLK],[ENOTBLK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTCONN],[ENOTCONN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTDIR],[ENOTDIR],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTEMPTY],[ENOTEMPTY],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTNAM],[ENOTNAM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTRECOVERABLE],[ENOTRECOVERABLE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTSOCK],[ENOTSOCK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTSUP],[ENOTSUP],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTTY],[ENOTTY],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENOTUNIQ],[ENOTUNIQ],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ENXIO],[ENXIO],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EOPNOTSUPP],[EOPNOTSUPP],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EOVERFLOW],[EOVERFLOW],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EOWNERDEAD],[EOWNERDEAD],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPERM],[EPERM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPFNOSUPPORT],[EPFNOSUPPORT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPIPE],[EPIPE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPROCLIM],[EPROCLIM],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPROCUNAVAIL],[EPROCUNAVAIL],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPROGMISMATCH],[EPROGMISMATCH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPROGUNAVAIL],[EPROGUNAVAIL],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPROTONOSUPPORT],[EPROTONOSUPPORT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPROTOTYPE],[EPROTOTYPE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EPROTO],[EPROTO],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ERANGE],[ERANGE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EREMCHG],[EREMCHG],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EREMOTEIO],[EREMOTEIO],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EREMOTE],[EREMOTE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ERESTART],[ERESTART],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ERFKILL],[ERFKILL],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EROFS],[EROFS],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ERPCMISMATCH],[ERPCMISMATCH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ESHUTDOWN],[ESHUTDOWN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ESOCKTNOSUPPORT],[ESOCKTNOSUPPORT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ESPIPE],[ESPIPE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ESRCH],[ESRCH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ESRMNT],[ESRMNT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ESTALE],[ESTALE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ESTRPIPE],[ESTRPIPE],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ETIMEDOUT],[ETIMEDOUT],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ETIME],[ETIME],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ETOOMANYREFS],[ETOOMANYREFS],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_ETXTBSY],[ETXTBSY],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EUCLEAN],[EUCLEAN],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EUNATCH],[EUNATCH],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EUSERS],[EUSERS],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EWOULDBLOCK],[EWOULDBLOCK],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EXDEV],[EXDEV],[CCSYS_ERRNO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EXFULL],[EXFULL],[CCSYS_ERRNO_HEADER])

AC_CACHE_SAVE


#### system constants: interprocess signal numbers

CCSYS_MAYBE_ENUM_DEF([CCSYS_NSIG],[NSIG],[CCSYS_SIGNAL_HEADER])

# program error
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGFPE],[SIGFPE],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGILL],[SIGILL],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGSEGV],[SIGSEGV],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGBUS],[SIGBUS],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGABRT],[SIGABRT],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGIOT],[SIGIOT],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGTRAP],[SIGTRAP],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGEMT],[SIGEMT],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGSYS],[SIGSYS],[CCSYS_SIGNAL_HEADER])

# termination
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGTERM],[SIGTERM],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGINT],[SIGINT],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGQUIT],[SIGQUIT],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGKILL],[SIGKILL],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGHUP],[SIGHUP],[CCSYS_SIGNAL_HEADER])

# alarm
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGALRM],[SIGALRM],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGVRALRM],[SIGVRALRM],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGPROF],[SIGPROF],[CCSYS_SIGNAL_HEADER])

# asynchronous I/O
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGIO],[SIGIO],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGURG],[SIGURG],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGPOLL],[SIGPOLL],[CCSYS_SIGNAL_HEADER])

# job control
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGCHLD],[SIGCHLD],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGCLD],[SIGCLD],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGCONT],[SIGCONT],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGSTOP],[SIGSTOP],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGTSTP],[SIGTSTP],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGTTIN],[SIGTTIN],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGTTOU],[SIGTTOU],[CCSYS_SIGNAL_HEADER])

# operation error
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGPIPE],[SIGPIPE],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGLOST],[SIGLOST],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGXCPU],[SIGXCPU],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGXSFZ],[SIGXSFZ],[CCSYS_SIGNAL_HEADER])

# misc
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGUSR1],[SIGUSR1],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGUSR2],[SIGUSR2],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGWINCH],[SIGWINCH],[CCSYS_SIGNAL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SIGINFO],[SIGINFO],[CCSYS_SIGNAL_HEADER])

AC_CACHE_SAVE


#### system constants

CCSYS_VALUEOF([CCSYS_L_CUSERID],[L_cuserid],[
#include <stdio.h>
])

CCSYS_VALUEOF([CCSYS_UTIME_NOW], [UTIME_NOW], [CCSYS_SYS_STAT_HEADER])
CCSYS_VALUEOF([CCSYS_UTIME_OMIT],[UTIME_OMIT],[CCSYS_SYS_STAT_HEADER])

# Auxiliary vector types.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_BASE],           [AT_BASE],              [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_BASE_PLATFORM],	[AT_BASE_PLATFORM],	[CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_CLKTCK],         [AT_CLKTCK],            [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_DCACHEBSIZE],	[AT_DCACHEBSIZE],	[CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_EGID],           [AT_EGID],              [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_ENTRY],          [AT_ENTRY],             [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_EUID],           [AT_EUID],              [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_EXECFD],         [AT_EXECFD],            [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_EXECFN],         [AT_EXECFN],            [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_FLAGS],          [AT_FLAGS],             [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_FPUCW],          [AT_FPUCW],             [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_GID],            [AT_GID],               [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_HWCAP],          [AT_HWCAP],             [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_HWCAP2],         [AT_HWCAP2],            [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_ICACHEBSIZE],	[AT_ICACHEBSIZE],	[CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_PAGESZ],         [AT_PAGESZ],            [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_PHDR],           [AT_PHDR],              [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_PHENT],          [AT_PHENT],             [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_PHNUM],          [AT_PHNUM],             [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_PLATFORM],	[AT_PLATFORM],          [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_RANDOM],         [AT_RANDOM],            [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_SECURE],         [AT_SECURE],            [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_SYSINFO],	[AT_SYSINFO],           [CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_SYSINFO_EHDR],	[AT_SYSINFO_EHDR],	[CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_UCACHEBSIZE],	[AT_UCACHEBSIZE],	[CCSYS_SYS_AUXV_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_UID],            [AT_UID],               [CCSYS_SYS_AUXV_HEADER])

# Open modes.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_CREAT],[O_CREAT],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_DIRECTORY],[O_DIRECTORY],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_DIRECT],[O_DIRECT],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_DSYNC],[O_DSYNC],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_EXCL],[O_EXCL],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_LARGEFILE],[O_LARGEFILE],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_NDELAY],[O_NDELAY],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_NOATIME],[O_NOATIME],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_NOCTTY],[O_NOCTTY],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_NOFOLLOW],[O_NOFOLLOW],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_NONBLOCK],[O_NONBLOCK],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_PATH],[O_PATH],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_SYNC],[O_SYNC],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_TMPFILE],[O_TMPFILE],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_TRUNC],[O_TRUNC],[CCSYS_FCNTL_HEADER])

# Access modes.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_RDONLY],[O_RDONLY],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_WRONLY],[O_WRONLY],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_RDWR],[O_RDWR],[CCSYS_FCNTL_HEADER])

# Operating modes.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_APPEND],[O_APPEND],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_ASYNC],[O_ASYNC],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_CLOEXEC],[O_CLOEXEC],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_O_NOATIME],[O_NOATIME],[CCSYS_FCNTL_HEADER])

# Permissions.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IRUSR],[S_IRUSR],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IWUSR],[S_IWUSR],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IXUSR],[S_IXUSR],[CCSYS_SYS_STAT_HEADER])

CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IRGRP],[S_IRGRP],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IWGRP],[S_IWGRP],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IXGRP],[S_IXGRP],[CCSYS_SYS_STAT_HEADER])

CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IROTH],[S_IROTH],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IWOTH],[S_IWOTH],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IXOTH],[S_IXOTH],[CCSYS_SYS_STAT_HEADER])

CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IRWXU],[S_IRWXU],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IRWXG],[S_IRWXG],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IRWXO],[S_IRWXO],[CCSYS_SYS_STAT_HEADER])

CCSYS_MAYBE_ENUM_DEF([CCSYS_S_ISUID],[S_ISUID],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_ISGID],[S_ISGID],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_ISVTX],[S_ISVTX],[CCSYS_SYS_STAT_HEADER])

# Seek constants.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_SEEK_SET],[SEEK_SET],[CCSYS_UNISTD_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SEEK_CUR],[SEEK_CUR],[CCSYS_UNISTD_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SEEK_END],[SEEK_END],[CCSYS_UNISTD_HEADER])

# File descriptor flags constants.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_FD_CLOEXEC],[FD_CLOEXEC],[CCSYS_FCNTL_HEADER])

CCSYS_VALUEOF([CCSYS_FD_SETSIZE],[FD_SETSIZE],[CCSYS_SYS_SELECT_HEADER])

# Flags for scatter-gather input/output.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_RWF_HIPRI],[RWF_HIPRI],[CCSYS_SYS_UIO_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_RWF_NOWAIT],[RWF_NOWAIT],[CCSYS_SYS_UIO_HEADER])

# Flags for "unlinkat(2)" and other "at" functions.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_REMOVEDIR],[AT_REMOVEDIR],[CCSYS_FCNTL_HEADER])

CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_EMPTY_PATH],[AT_EMPTY_PATH],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_NO_AUTOMOUNT],[AT_NO_AUTOMOUNT],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_SYMLINK_FOLLOW],[AT_SYMLINK_FOLLOW],[CCSYS_FCNTL_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AT_SYMLINK_NOFOLLOW],[AT_SYMLINK_NOFOLLOW],[CCSYS_FCNTL_HEADER])

CCSYS_VALUEOF([CCSYS_AT_FDCWD],[AT_FDCWD],[CCSYS_FCNTL_HEADER])

# Flags for the field "st_mode" in "struct stat".
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFMT],[S_IFMT],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFSOCK],[S_IFSOCK],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFLNK],[S_IFLNK],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFREG],[S_IFREG],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFBLK],[S_IFBLK],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFDIR],[S_IFDIR],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFCHR],[S_IFCHR],[CCSYS_SYS_STAT_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_S_IFIFO],[S_IFIFO],[CCSYS_SYS_STAT_HEADER])

# Flags  for the  argument  "flags" of  "renameat2()", a  Linux-specific
# function.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_RENAME_EXCHANGE],[RENAME_EXCHANGE],[CCSYS_LINUX_FS_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_RENAME_NOREPLACE],[RENAME_NOREPLACE],[CCSYS_LINUX_FS_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_RENAME_WHITEOUT],[RENAME_WHITEOUT],[CCSYS_LINUX_FS_HEADER])

# Flags for the argument "mode" of "access()".
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_F_OK],[F_OK],[CCSYS_UNISTD_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_R_OK],[R_OK],[CCSYS_UNISTD_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_W_OK],[W_OK],[CCSYS_UNISTD_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_X_OK],[X_OK],[CCSYS_UNISTD_HEADER])


# Socket  namespaces.   On  GNU+Linux   systems,  see  the  manual  page
# "socket(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_SOCK_STREAM],[SOCK_STREAM],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SOCK_DGRAM],[SOCK_DGRAM],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SOCK_SEQPACKET],[SOCK_SEQPACKET],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SOCK_RAW],[SOCK_RAW],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SOCK_RDM],[SOCK_RDM],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_SOCK_PACKET],[SOCK_PACKET],[CCSYS_SYS_SOCKET_HEADER])

# Socket styles  or types.   On GNU+Linux systems,  see the  manual page
# "socket(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_UNIX],[AF_UNIX],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_LOCAL],[AF_LOCAL],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_INET],[AF_INET],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_INET6],[AF_INET6],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_IPX],[AF_IPX],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_NETLINK],[AF_NETLINK],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_X25],[AF_X25],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_AX25],[AF_AX25],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_ATMPVC],[AF_ATMPVC],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_APPLETALK],[AF_APPLETALK],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_PACKET],[AF_PACKET],[CCSYS_SYS_SOCKET_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_AF_ALG],[AF_ALG],[CCSYS_SYS_SOCKET_HEADER])

# Socket  protocols.    On  GNU+Linux  systems,  see   the  manual  page
# "protocols(5)" for the full list.
#
AC_SUBST([CCSYS_ENUM_DEF_CCSYS_SOCK_PROTOCOL_IP],[CCSYS_SOCK_PROTOCOL_IP=0[],])

# Flags for  "mlockall(2)".  On GNU+Linux  systems, see the  manual page
# "mlockall(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_MCL_CURRENT],[MCL_CURRENT],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MCL_FUTURE],[MCL_FUTURE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MCL_ONFAULT],[MCL_ONFAULT],[CCSYS_SYS_MMAN_HEADER])

# Protection specification for "mmap(2)".  On GNU+Linux systems, see the
# manual page "mmap(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_PROT_EXEC],[PROT_EXEC],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_PROT_READ],[PROT_READ],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_PROT_WRITE],[PROT_WRITE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_PROT_NONE],[PROT_NONE],[CCSYS_SYS_MMAN_HEADER])

# Flags  for  "mmap(2)".  On  GNU+Linux  systems,  see the  manual  page
# "mmap(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_SHARED],[MAP_SHARED],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_PRIVATE],[MAP_PRIVATE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_32BIT],[MAP_32BIT],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_ANON],[MAP_ANON],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_ANONYMOUS],[MAP_ANONYMOUS],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_DENYWRITE],[MAP_DENYWRITE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_EXECUTABLE],[MAP_EXECUTABLE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_FILE],[MAP_FILE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_FIXED],[MAP_FIXED],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_GROWSDOWN],[MAP_GROWSDOWN],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_HUGETLB],[MAP_HUGETLB],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_HUGE_2MB],[MAP_HUGE_2MB],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_HUGE_1GB],[MAP_HUGE_1GB],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_LOCKED],[MAP_LOCKED],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_NONBLOCK],[MAP_NONBLOCK],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_NORESERVE],[MAP_NORESERVE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_POPULATE],[MAP_POPULATE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_STACK],[MAP_STACK],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_UNINITIALIZED],[MAP_UNINITIALIZED],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_AUTOGROW],[MAP_AUTOGROW],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_AUTORESRV],[MAP_AUTORESRV],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_COPY],[MAP_COPY],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MAP_LOCAL],[MAP_LOCAL],[CCSYS_SYS_MMAN_HEADER])

# Flags  for "msync(2)".   On  GNU+Linux systems,  see  the manual  page
# "msync(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_MS_ASYNC],[MS_ASYNC],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MS_SYNC],[MS_SYNC],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MS_INVALIDATE],[MS_INVALIDATE],[CCSYS_SYS_MMAN_HEADER])

# Flags  for "mremap(2)".   On GNU+Linux  systems, see  the manual  page
# "mremap(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_MREMAP_MAYMOVE],[MREMAP_MAYMOVE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MREMAP_FIXED],[MREMAP_FIXED],[CCSYS_SYS_MMAN_HEADER])

# Flags for  "madvise(2)".  On  GNU+Linux systems,  see the  manual page
# "madvise(2)" for the full list.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_NORMAL],[MADV_NORMAL],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_RANDOM],[MADV_RANDOM],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_SEQUENTIAL],[MADV_SEQUENTIAL],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_WILLNEED],[MADV_WILLNEED],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_DONTNEED],[MADV_DONTNEED],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_REMOVE],[MADV_REMOVE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_DONTFORK],[MADV_DONTFORK],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_DOFORK],[MADV_DOFORK],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_HWPOISON],[MADV_HWPOISON],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_MERGEABLE],[MADV_MERGEABLE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_UNMERGEABLE],[MADV_UNMERGEABLE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_SOFT_OFFLINE],[MADV_SOFT_OFFLINE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_HUGEPAGE],[MADV_HUGEPAGE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_NOHUGEPAGE],[MADV_NOHUGEPAGE],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_DONTDUMP],[MADV_DONTDUMP],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_DODUMP],[MADV_DODUMP],[CCSYS_SYS_MMAN_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_MADV_FREE],[MADV_FREE],[CCSYS_SYS_MMAN_HEADER])

# Exit statuses modes.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_EXIT_SUCCESS],[EXIT_SUCCESS],[CCSYS_STDLIB_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_EXIT_FAILURE],[EXIT_FAILURE],[CCSYS_STDLIB_HEADER])

# Process wait options.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_WNOHANG],[WNOHANG],[CCSYS_STDLIB_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_WUNTRACED],[WUNTRACED],[CCSYS_STDLIB_HEADER])
CCSYS_MAYBE_ENUM_DEF([CCSYS_WCONTINUED],[WCONTINUED],[CCSYS_STDLIB_HEADER])

# Limits.
#
CCSYS_MAYBE_ENUM_DEF([CCSYS_PATH_MAX],[PATH_MAX],[CCSYS_LIMITS_HEADER])

# Constants for "pathconf()" and "fpathconf()".
#
# $1 - the name of the constant
AC_DEFUN([CCSYS_PATHCONF_CONST],
  [CCSYS_MAYBE_ENUM_DEF([CCSYS_$1],[$1],[CCSYS_UNISTD_HEADER])])
CCSYS_PATHCONF_CONST([_PC_LINK_MAX])
CCSYS_PATHCONF_CONST([_PC_MAX_CANON])
CCSYS_PATHCONF_CONST([_PC_MAX_INPUT])
CCSYS_PATHCONF_CONST([_PC_NAME_MAX])
CCSYS_PATHCONF_CONST([_PC_PATH_MAX])
CCSYS_PATHCONF_CONST([_PC_PIPE_BUF])
CCSYS_PATHCONF_CONST([_PC_CHOWN_RESTRICTED])
CCSYS_PATHCONF_CONST([_PC_NO_TRUNC])
CCSYS_PATHCONF_CONST([_PC_VDISABLE])
CCSYS_PATHCONF_CONST([_PC_SYNC_IO])
CCSYS_PATHCONF_CONST([_PC_ASYNC_IO])
CCSYS_PATHCONF_CONST([_PC_PRIO_IO])
CCSYS_PATHCONF_CONST([_PC_FILESIZEBITS])
CCSYS_PATHCONF_CONST([_PC_REC_INCR_XFER_SIZE])
CCSYS_PATHCONF_CONST([_PC_REC_MAX_XFER_SIZE])
CCSYS_PATHCONF_CONST([_PC_REC_MIN_XFER_SIZE])
CCSYS_PATHCONF_CONST([_PC_REC_XFER_ALIGN])

# Constants for "confstr()".
#
# $1 - the name of the constant
AC_DEFUN([CCSYS_CONFSTR_CONST],
  [CCSYS_MAYBE_ENUM_DEF([CCSYS_$1],[$1],[CCSYS_UNISTD_HEADER])])
CCSYS_CONFSTR_CONST([_CS_GNU_LIBC_VERSION])
CCSYS_CONFSTR_CONST([_CS_GNU_LIBPTHREAD_VERSION])
CCSYS_CONFSTR_CONST([_CS_PATH])
CCSYS_CONFSTR_CONST([_CS_LFS_CFLAGS])
CCSYS_CONFSTR_CONST([_CS_LFS_LDFLAGS])
CCSYS_CONFSTR_CONST([_CS_LFS_LIBS])
CCSYS_CONFSTR_CONST([_CS_LFS_LINTFLAGS])
CCSYS_CONFSTR_CONST([_CS_LFS64_CFLAGS])
CCSYS_CONFSTR_CONST([_CS_LFS64_LDFLAGS])
CCSYS_CONFSTR_CONST([_CS_LFS64_LIBS])
CCSYS_CONFSTR_CONST([_CS_LFS64_LINTFLAGS])

# Constants for "getrusage()".
#
# $1 - the name of the constant
AC_DEFUN([CCSYS_GETRUSAGE_CONST],
  [CCSYS_MAYBE_ENUM_DEF([CCSYS_$1],[$1],[CCSYS_SYS_RESOURCE_HEADER])])
CCSYS_GETRUSAGE_CONST([RUSAGE_SELF])
CCSYS_GETRUSAGE_CONST([RUSAGE_CHILDREN])
CCSYS_GETRUSAGE_CONST([RUSAGE_THREAD])

# Constants for "getrlimit()".
#
# $1 - the name of the constant
AC_DEFUN([CCSYS_GETRLIMIT_CONST],
  [CCSYS_MAYBE_ENUM_DEF([CCSYS_$1],[$1],[CCSYS_SYS_RESOURCE_HEADER])])
CCSYS_GETRLIMIT_CONST([RLIMIT_AS])
CCSYS_GETRLIMIT_CONST([RLIMIT_CORE])
CCSYS_GETRLIMIT_CONST([RLIMIT_CPU])
CCSYS_GETRLIMIT_CONST([RLIMIT_DATA])
CCSYS_GETRLIMIT_CONST([RLIMIT_FSIZE])
CCSYS_GETRLIMIT_CONST([RLIMIT_LOCKS])
CCSYS_GETRLIMIT_CONST([RLIMIT_MEMLOCK])
CCSYS_GETRLIMIT_CONST([RLIMIT_MSGQUEUE])
CCSYS_GETRLIMIT_CONST([RLIMIT_NICE])
CCSYS_GETRLIMIT_CONST([RLIMIT_NOFILE])
CCSYS_GETRLIMIT_CONST([RLIMIT_NPROC])
CCSYS_GETRLIMIT_CONST([RLIMIT_RSS])
CCSYS_GETRLIMIT_CONST([RLIMIT_RTPRIO])
CCSYS_GETRLIMIT_CONST([RLIMIT_RTTIME])
CCSYS_GETRLIMIT_CONST([RLIMIT_SIGPENDING])
CCSYS_GETRLIMIT_CONST([RLIMIT_STACK])

CCSYS_VALUEOF([CCSYS_RLIMIT_INFINITY],[RLIMIT_INFINITY],[CCSYS_SYS_RESOURCE_HEADER])

# Constants for "fcntl()".
#
# $1 - the name of the constant
AC_DEFUN([CCSYS_FCNTL_CONST],
  [CCSYS_MAYBE_ENUM_DEF([CCSYS_$1],[$1],[CCSYS_FCNTL_HEADER])])
CCSYS_FCNTL_CONST([F_DUPFD])
CCSYS_FCNTL_CONST([F_DUPFD_CLOEXEC])
CCSYS_FCNTL_CONST([F_GETFD])
CCSYS_FCNTL_CONST([F_SETFD])
CCSYS_FCNTL_CONST([F_GETFL])
CCSYS_FCNTL_CONST([F_SETFL])
CCSYS_FCNTL_CONST([F_SETLK])
CCSYS_FCNTL_CONST([F_SETLKW])
CCSYS_FCNTL_CONST([F_GETLK])
CCSYS_FCNTL_CONST([F_OFD_SETLK])
CCSYS_FCNTL_CONST([F_OFD_SETLKW])
CCSYS_FCNTL_CONST([F_OFD_GETLK])
CCSYS_FCNTL_CONST([F_GETOWN])
CCSYS_FCNTL_CONST([F_SETOWN])
CCSYS_FCNTL_CONST([F_GETOWN_EX])
CCSYS_FCNTL_CONST([F_SETOWN_EX])
CCSYS_FCNTL_CONST([F_GETSIG])
CCSYS_FCNTL_CONST([F_SETSIG])
CCSYS_FCNTL_CONST([F_SETLEASE])
CCSYS_FCNTL_CONST([F_GETLEASE])
CCSYS_FCNTL_CONST([F_NOTIFY])
CCSYS_FCNTL_CONST([F_SETPIPE_SZ])
CCSYS_FCNTL_CONST([F_GETPIPE_SZ])
CCSYS_FCNTL_CONST([F_ADD_SEALS])
CCSYS_FCNTL_CONST([F_GET_SEALS])
CCSYS_FCNTL_CONST([F_SEAL_SEAL])
CCSYS_FCNTL_CONST([F_SEAL_SHRINK])
CCSYS_FCNTL_CONST([F_SEAL_GROW])
CCSYS_FCNTL_CONST([F_SEAL_WRITE])

# Other constants for "fcntl()", not to be used as commands.
#
CCSYS_FCNTL_CONST([F_RDLCK])
CCSYS_FCNTL_CONST([F_WRLCK])
CCSYS_FCNTL_CONST([F_UNLCK])

CCSYS_FCNTL_CONST([DN_ACCESS])
CCSYS_FCNTL_CONST([DN_MODIFY])
CCSYS_FCNTL_CONST([DN_CREATE])
CCSYS_FCNTL_CONST([DN_DELETE])
CCSYS_FCNTL_CONST([DN_RENAME])
CCSYS_FCNTL_CONST([DN_ATTRIB])

CCSYS_VALUEOF([DN_MULTISHOT],[DN_MULTISHOT],[CCSYS_FCNTL_HEADER])


#### sysconf constants

dnl $1 - the name of the constant
AC_DEFUN([CCSYS_SYSCONF_CONST],
  [CCSYS_MAYBE_ENUM_DEF([CCSYS_$1],[$1],[CCSYS_UNISTD_HEADER])])

CCSYS_SYSCONF_CONST([_SC_ARG_MAX])
CCSYS_SYSCONF_CONST([_SC_CHILD_MAX])
CCSYS_SYSCONF_CONST([_SC_CLK_TCK])
CCSYS_SYSCONF_CONST([_SC_NGROUPS_MAX])
CCSYS_SYSCONF_CONST([_SC_OPEN_MAX])
CCSYS_SYSCONF_CONST([_SC_STREAM_MAX])
CCSYS_SYSCONF_CONST([_SC_TZNAME_MAX])
CCSYS_SYSCONF_CONST([_SC_JOB_CONTROL])
CCSYS_SYSCONF_CONST([_SC_SAVED_IDS])
CCSYS_SYSCONF_CONST([_SC_REALTIME_SIGNALS])
CCSYS_SYSCONF_CONST([_SC_PRIORITY_SCHEDULING])
CCSYS_SYSCONF_CONST([_SC_TIMERS])
CCSYS_SYSCONF_CONST([_SC_ASYNCHRONOUS_IO])
CCSYS_SYSCONF_CONST([_SC_PRIORITIZED_IO])
CCSYS_SYSCONF_CONST([_SC_SYNCHRONIZED_IO])
CCSYS_SYSCONF_CONST([_SC_FSYNC])
CCSYS_SYSCONF_CONST([_SC_MAPPED_FILES])
CCSYS_SYSCONF_CONST([_SC_MEMLOCK])
CCSYS_SYSCONF_CONST([_SC_MEMLOCK_RANGE])
CCSYS_SYSCONF_CONST([_SC_MEMORY_PROTECTION])
CCSYS_SYSCONF_CONST([_SC_MESSAGE_PASSING])
CCSYS_SYSCONF_CONST([_SC_SEMAPHORES])
CCSYS_SYSCONF_CONST([_SC_SHARED_MEMORY_OBJECTS])
CCSYS_SYSCONF_CONST([_SC_AIO_LISTIO_MAX])
CCSYS_SYSCONF_CONST([_SC_AIO_MAX])
CCSYS_SYSCONF_CONST([_SC_AIO_PRIO_DELTA_MAX])
CCSYS_SYSCONF_CONST([_SC_DELAYTIMER_MAX])
CCSYS_SYSCONF_CONST([_SC_MQ_OPEN_MAX])
CCSYS_SYSCONF_CONST([_SC_MQ_PRIO_MAX])
CCSYS_SYSCONF_CONST([_SC_VERSION])
CCSYS_SYSCONF_CONST([_SC_PAGESIZE])
CCSYS_SYSCONF_CONST([_SC_PAGE_SIZE])
CCSYS_SYSCONF_CONST([_SC_RTSIG_MAX])
CCSYS_SYSCONF_CONST([_SC_SEM_NSEMS_MAX])
CCSYS_SYSCONF_CONST([_SC_SEM_VALUE_MAX])
CCSYS_SYSCONF_CONST([_SC_SIGQUEUE_MAX])
CCSYS_SYSCONF_CONST([_SC_TIMER_MAX])
CCSYS_SYSCONF_CONST([_SC_BC_BASE_MAX])
CCSYS_SYSCONF_CONST([_SC_BC_DIM_MAX])
CCSYS_SYSCONF_CONST([_SC_BC_SCALE_MAX])
CCSYS_SYSCONF_CONST([_SC_BC_STRING_MAX])
CCSYS_SYSCONF_CONST([_SC_COLL_WEIGHTS_MAX])
CCSYS_SYSCONF_CONST([_SC_EQUIV_CLASS_MAX])
CCSYS_SYSCONF_CONST([_SC_EXPR_NEST_MAX])
CCSYS_SYSCONF_CONST([_SC_LINE_MAX])
CCSYS_SYSCONF_CONST([_SC_RE_DUP_MAX])
CCSYS_SYSCONF_CONST([_SC_CHARCLASS_NAME_MAX])
CCSYS_SYSCONF_CONST([_SC_2_VERSION])
CCSYS_SYSCONF_CONST([_SC_2_C_BIND])
CCSYS_SYSCONF_CONST([_SC_2_C_DEV])
CCSYS_SYSCONF_CONST([_SC_2_FORT_DEV])
CCSYS_SYSCONF_CONST([_SC_2_FORT_RUN])
CCSYS_SYSCONF_CONST([_SC_2_SW_DEV])
CCSYS_SYSCONF_CONST([_SC_2_LOCALEDEF])
CCSYS_SYSCONF_CONST([_SC_PII])
CCSYS_SYSCONF_CONST([_SC_PII_XTI])
CCSYS_SYSCONF_CONST([_SC_PII_SOCKET])
CCSYS_SYSCONF_CONST([_SC_PII_INTERNET])
CCSYS_SYSCONF_CONST([_SC_PII_OSI])
CCSYS_SYSCONF_CONST([_SC_POLL])
CCSYS_SYSCONF_CONST([_SC_SELECT])
CCSYS_SYSCONF_CONST([_SC_UIO_MAXIOV])
CCSYS_SYSCONF_CONST([_SC_IOV_MAX])
CCSYS_SYSCONF_CONST([_SC_PII_INTERNET_STREAM])
CCSYS_SYSCONF_CONST([_SC_PII_INTERNET_DGRAM])
CCSYS_SYSCONF_CONST([_SC_PII_OSI_COTS])
CCSYS_SYSCONF_CONST([_SC_PII_OSI_CLTS])
CCSYS_SYSCONF_CONST([_SC_PII_OSI_M])
CCSYS_SYSCONF_CONST([_SC_T_IOV_MAX])
CCSYS_SYSCONF_CONST([_SC_THREADS])
CCSYS_SYSCONF_CONST([_SC_THREAD_SAFE_FUNCTIONS])
CCSYS_SYSCONF_CONST([_SC_GETGR_R_SIZE_MAX])
CCSYS_SYSCONF_CONST([_SC_GETPW_R_SIZE_MAX])
CCSYS_SYSCONF_CONST([_SC_LOGIN_NAME_MAX])
CCSYS_SYSCONF_CONST([_SC_TTY_NAME_MAX])
CCSYS_SYSCONF_CONST([_SC_THREAD_DESTRUCTOR_ITERATIONS])
CCSYS_SYSCONF_CONST([_SC_THREAD_KEYS_MAX])
CCSYS_SYSCONF_CONST([_SC_THREAD_STACK_MIN])
CCSYS_SYSCONF_CONST([_SC_THREAD_THREADS_MAX])
CCSYS_SYSCONF_CONST([_SC_THREAD_ATTR_STACKADDR])
CCSYS_SYSCONF_CONST([_SC_THREAD_ATTR_STACKSIZE])
CCSYS_SYSCONF_CONST([_SC_THREAD_PRIORITY_SCHEDULING])
CCSYS_SYSCONF_CONST([_SC_THREAD_PRIO_INHERIT])
CCSYS_SYSCONF_CONST([_SC_THREAD_PRIO_PROTECT])
CCSYS_SYSCONF_CONST([_SC_THREAD_PROCESS_SHARED])
CCSYS_SYSCONF_CONST([_SC_NPROCESSORS_CONF])
CCSYS_SYSCONF_CONST([_SC_NPROCESSORS_ONLN])
CCSYS_SYSCONF_CONST([_SC_PHYS_PAGES])
CCSYS_SYSCONF_CONST([_SC_AVPHYS_PAGES])
CCSYS_SYSCONF_CONST([_SC_ATEXIT_MAX])
CCSYS_SYSCONF_CONST([_SC_PASS_MAX])
CCSYS_SYSCONF_CONST([_SC_XOPEN_VERSION])
CCSYS_SYSCONF_CONST([_SC_XOPEN_XCU_VERSION])
CCSYS_SYSCONF_CONST([_SC_XOPEN_UNIX])
CCSYS_SYSCONF_CONST([_SC_XOPEN_CRYPT])
CCSYS_SYSCONF_CONST([_SC_XOPEN_ENH_I18N])
CCSYS_SYSCONF_CONST([_SC_XOPEN_SHM])
CCSYS_SYSCONF_CONST([_SC_2_CHAR_TERM])
CCSYS_SYSCONF_CONST([_SC_2_C_VERSION])
CCSYS_SYSCONF_CONST([_SC_2_UPE])
CCSYS_SYSCONF_CONST([_SC_XOPEN_XPG2])
CCSYS_SYSCONF_CONST([_SC_XOPEN_XPG3])
CCSYS_SYSCONF_CONST([_SC_XOPEN_XPG4])
CCSYS_SYSCONF_CONST([_SC_CHAR_BIT])
CCSYS_SYSCONF_CONST([_SC_CHAR_MAX])
CCSYS_SYSCONF_CONST([_SC_CHAR_MIN])
CCSYS_SYSCONF_CONST([_SC_INT_MAX])
CCSYS_SYSCONF_CONST([_SC_INT_MIN])
CCSYS_SYSCONF_CONST([_SC_LONG_BIT])
CCSYS_SYSCONF_CONST([_SC_WORD_BIT])
CCSYS_SYSCONF_CONST([_SC_MB_LEN_MAX])
CCSYS_SYSCONF_CONST([_SC_NZERO])
CCSYS_SYSCONF_CONST([_SC_SSIZE_MAX])
CCSYS_SYSCONF_CONST([_SC_SCHAR_MAX])
CCSYS_SYSCONF_CONST([_SC_SCHAR_MIN])
CCSYS_SYSCONF_CONST([_SC_SHRT_MAX])
CCSYS_SYSCONF_CONST([_SC_SHRT_MIN])
CCSYS_SYSCONF_CONST([_SC_UCHAR_MAX])
CCSYS_SYSCONF_CONST([_SC_UINT_MAX])
CCSYS_SYSCONF_CONST([_SC_ULONG_MAX])
CCSYS_SYSCONF_CONST([_SC_USHRT_MAX])
CCSYS_SYSCONF_CONST([_SC_NL_ARGMAX])
CCSYS_SYSCONF_CONST([_SC_NL_LANGMAX])
CCSYS_SYSCONF_CONST([_SC_NL_MSGMAX])
CCSYS_SYSCONF_CONST([_SC_NL_NMAX])
CCSYS_SYSCONF_CONST([_SC_NL_SETMAX])
CCSYS_SYSCONF_CONST([_SC_NL_TEXTMAX])
CCSYS_SYSCONF_CONST([_SC_XBS5_ILP32_OFF32])
CCSYS_SYSCONF_CONST([_SC_XBS5_ILP32_OFFBIG])
CCSYS_SYSCONF_CONST([_SC_XBS5_LP64_OFF64])
CCSYS_SYSCONF_CONST([_SC_XBS5_LPBIG_OFFBIG])
CCSYS_SYSCONF_CONST([_SC_XOPEN_LEGACY])
CCSYS_SYSCONF_CONST([_SC_XOPEN_REALTIME])
CCSYS_SYSCONF_CONST([_SC_XOPEN_REALTIME_THREADS])
CCSYS_SYSCONF_CONST([_SC_ADVISORY_INFO])
CCSYS_SYSCONF_CONST([_SC_BARRIERS])
CCSYS_SYSCONF_CONST([_SC_BASE])
CCSYS_SYSCONF_CONST([_SC_C_LANG_SUPPORT])
CCSYS_SYSCONF_CONST([_SC_C_LANG_SUPPORT_R])
CCSYS_SYSCONF_CONST([_SC_CLOCK_SELECTION])
CCSYS_SYSCONF_CONST([_SC_CPUTIME])
CCSYS_SYSCONF_CONST([_SC_THREAD_CPUTIME])
CCSYS_SYSCONF_CONST([_SC_DEVICE_IO])
CCSYS_SYSCONF_CONST([_SC_DEVICE_SPECIFIC])
CCSYS_SYSCONF_CONST([_SC_DEVICE_SPECIFIC_R])
CCSYS_SYSCONF_CONST([_SC_FD_MGMT])
CCSYS_SYSCONF_CONST([_SC_FIFO])
CCSYS_SYSCONF_CONST([_SC_PIPE])
CCSYS_SYSCONF_CONST([_SC_FILE_ATTRIBUTES])
CCSYS_SYSCONF_CONST([_SC_FILE_LOCKING])
CCSYS_SYSCONF_CONST([_SC_FILE_SYSTEM])
CCSYS_SYSCONF_CONST([_SC_MONOTONIC_CLOCK])
CCSYS_SYSCONF_CONST([_SC_MULTI_PROCESS])
CCSYS_SYSCONF_CONST([_SC_SINGLE_PROCESS])
CCSYS_SYSCONF_CONST([_SC_NETWORKING])
CCSYS_SYSCONF_CONST([_SC_READER_WRITER_LOCKS])
CCSYS_SYSCONF_CONST([_SC_SPIN_LOCKS])
CCSYS_SYSCONF_CONST([_SC_REGEXP])
CCSYS_SYSCONF_CONST([_SC_REGEX_VERSION])
CCSYS_SYSCONF_CONST([_SC_SHELL])
CCSYS_SYSCONF_CONST([_SC_SIGNALS])
CCSYS_SYSCONF_CONST([_SC_SPAWN])
CCSYS_SYSCONF_CONST([_SC_SPORADIC_SERVER])
CCSYS_SYSCONF_CONST([_SC_THREAD_SPORADIC_SERVER])
CCSYS_SYSCONF_CONST([_SC_SYSTEM_DATABASE])
CCSYS_SYSCONF_CONST([_SC_SYSTEM_DATABASE_R])
CCSYS_SYSCONF_CONST([_SC_TIMEOUTS])
CCSYS_SYSCONF_CONST([_SC_TYPED_MEMORY_OBJECTS])
CCSYS_SYSCONF_CONST([_SC_USER_GROUPS])
CCSYS_SYSCONF_CONST([_SC_USER_GROUPS_R])
CCSYS_SYSCONF_CONST([_SC_2_PBS])
CCSYS_SYSCONF_CONST([_SC_2_PBS_ACCOUNTING])
CCSYS_SYSCONF_CONST([_SC_2_PBS_LOCATE])
CCSYS_SYSCONF_CONST([_SC_2_PBS_MESSAGE])
CCSYS_SYSCONF_CONST([_SC_2_PBS_TRACK])
CCSYS_SYSCONF_CONST([_SC_SYMLOOP_MAX])
CCSYS_SYSCONF_CONST([_SC_STREAMS])
CCSYS_SYSCONF_CONST([_SC_2_PBS_CHECKPOINT])
CCSYS_SYSCONF_CONST([_SC_V6_ILP32_OFF32])
CCSYS_SYSCONF_CONST([_SC_V6_ILP32_OFFBIG])
CCSYS_SYSCONF_CONST([_SC_V6_LP64_OFF64])
CCSYS_SYSCONF_CONST([_SC_V6_LPBIG_OFFBIG])
CCSYS_SYSCONF_CONST([_SC_HOST_NAME_MAX])
CCSYS_SYSCONF_CONST([_SC_TRACE])
CCSYS_SYSCONF_CONST([_SC_TRACE_EVENT_FILTER])
CCSYS_SYSCONF_CONST([_SC_TRACE_INHERIT])
CCSYS_SYSCONF_CONST([_SC_TRACE_LOG])
CCSYS_SYSCONF_CONST([_SC_LEVEL1_ICACHE_SIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL1_ICACHE_ASSOC])
CCSYS_SYSCONF_CONST([_SC_LEVEL1_ICACHE_LINESIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL1_DCACHE_SIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL1_DCACHE_ASSOC])
CCSYS_SYSCONF_CONST([_SC_LEVEL1_DCACHE_LINESIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL2_CACHE_SIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL2_CACHE_ASSOC])
CCSYS_SYSCONF_CONST([_SC_LEVEL2_CACHE_LINESIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL3_CACHE_SIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL3_CACHE_ASSOC])
CCSYS_SYSCONF_CONST([_SC_LEVEL3_CACHE_LINESIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL4_CACHE_SIZE])
CCSYS_SYSCONF_CONST([_SC_LEVEL4_CACHE_ASSOC])
CCSYS_SYSCONF_CONST([_SC_LEVEL4_CACHE_LINESIZE])
CCSYS_SYSCONF_CONST([_SC_IPV6])
CCSYS_SYSCONF_CONST([_SC_RAW_SOCKETS])


#### finish

AC_CONFIG_HEADERS([config.h])
AC_CONFIG_FILES([Makefile]
   [src/ccsys.h]
   [meta/scripts/ccsys.pc]
   [meta/slackware/slack-desc])
MMUX_OUTPUT
AC_OUTPUT

### end of file
